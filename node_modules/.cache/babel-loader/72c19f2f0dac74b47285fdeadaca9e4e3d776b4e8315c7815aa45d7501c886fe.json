{"ast":null,"code":"var _jsxFileName = \"/Users/tejaspatil/Desktop/RBAC/rbac/src/components/pages/RoleManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoleManagement = () => {\n  _s();\n  const [roles, setRoles] = useState([\"Team Lead\", \"Manager\", \"Associate Manager\"]);\n  const [newRole, setNewRole] = useState(\"\");\n  const [editRole, setEditRole] = useState(\"\");\n  const [updatedRole, setUpdatedRole] = useState(\"\");\n  const [isEditing, setIsEditing] = useState(false);\n\n  // Add a new role\n  const handleAddRole = () => {\n    if (!newRole) return alert(\"Role cannot be empty.\");\n    if (roles.includes(newRole)) return alert(\"Role already exists.\");\n    setRoles(prevRoles => [...prevRoles, newRole]);\n    setNewRole(\"\");\n  };\n\n  // Edit an existing role\n  const handleEditRole = () => {\n    if (!editRole || !updatedRole) return alert(\"Invalid role details.\");\n    if (!roles.includes(editRole)) return alert(\"Role not found.\");\n    setRoles(prevRoles => prevRoles.map(role => role === editRole ? updatedRole : role));\n    setEditRole(\"\");\n    setUpdatedRole(\"\");\n    setIsEditing(false);\n  };\n\n  // Delete a role\n  const handleDeleteRole = roleToDelete => {\n    setRoles(prevRoles => prevRoles.filter(role => role !== roleToDelete));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"permission-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"header-title\",\n      children: \"Role Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newRole,\n        onChange: e => setNewRole(e.target.value),\n        placeholder: \"Add new role\",\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddRole,\n        className: \"btn btn-primary\",\n        children: \"Add Role\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-role\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: editRole,\n          onChange: e => setEditRole(e.target.value),\n          className: \"dropdown\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select role to edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), roles.map((role, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: role,\n            children: role\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: updatedRole,\n          onChange: e => setUpdatedRole(e.target.value),\n          placeholder: \"Updated role name\",\n          className: \"input-field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEditRole,\n          className: \"btn btn-primary\",\n          children: \"Update Role\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsEditing(true),\n        className: \"btn btn-primary\",\n        children: \"Edit Role\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"sub-header\",\n      children: \"Existing Roles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: roles.map((role, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: role\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteRole(role),\n              className: \"btn btn-danger\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(RoleManagement, \"zKbw0R4puneHTzAz+/RcwLB06vI=\");\n_c = RoleManagement;\nexport default RoleManagement;\nvar _c;\n$RefreshReg$(_c, \"RoleManagement\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RoleManagement","_s","roles","setRoles","newRole","setNewRole","editRole","setEditRole","updatedRole","setUpdatedRole","isEditing","setIsEditing","handleAddRole","alert","includes","prevRoles","handleEditRole","map","role","handleDeleteRole","roleToDelete","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","index","_c","$RefreshReg$"],"sources":["/Users/tejaspatil/Desktop/RBAC/rbac/src/components/pages/RoleManagement.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst RoleManagement = () => {\n  const [roles, setRoles] = useState([\n    \"Team Lead\",\n    \"Manager\",\n    \"Associate Manager\",\n  ]);\n  const [newRole, setNewRole] = useState(\"\");\n  const [editRole, setEditRole] = useState(\"\");\n  const [updatedRole, setUpdatedRole] = useState(\"\");\n  const [isEditing, setIsEditing] = useState(false);\n\n  // Add a new role\n  const handleAddRole = () => {\n    if (!newRole) return alert(\"Role cannot be empty.\");\n    if (roles.includes(newRole)) return alert(\"Role already exists.\");\n    setRoles((prevRoles) => [...prevRoles, newRole]);\n    setNewRole(\"\");\n  };\n\n  // Edit an existing role\n  const handleEditRole = () => {\n    if (!editRole || !updatedRole) return alert(\"Invalid role details.\");\n    if (!roles.includes(editRole)) return alert(\"Role not found.\");\n    setRoles((prevRoles) =>\n      prevRoles.map((role) => (role === editRole ? updatedRole : role))\n    );\n    setEditRole(\"\");\n    setUpdatedRole(\"\");\n    setIsEditing(false);\n  };\n\n  // Delete a role\n  const handleDeleteRole = (roleToDelete) => {\n    setRoles((prevRoles) => prevRoles.filter((role) => role !== roleToDelete));\n  };\n\n  return (\n    <div className=\"permission-container\">\n      <h1 className=\"header-title\">Role Management</h1>\n\n      {/* Add Role Section */}\n      <div className=\"section\">\n        <input\n          type=\"text\"\n          value={newRole}\n          onChange={(e) => setNewRole(e.target.value)}\n          placeholder=\"Add new role\"\n          className=\"input-field\"\n        />\n        <button onClick={handleAddRole} className=\"btn btn-primary\">\n          Add Role\n        </button>\n      </div>\n\n      {/* Edit Role Section */}\n      <div className=\"section\">\n        {isEditing ? (\n          <div className=\"edit-role\">\n            <select\n              value={editRole}\n              onChange={(e) => setEditRole(e.target.value)}\n              className=\"dropdown\"\n            >\n              <option value=\"\">Select role to edit</option>\n              {roles.map((role, index) => (\n                <option key={index} value={role}>\n                  {role}\n                </option>\n              ))}\n            </select>\n            <input\n              type=\"text\"\n              value={updatedRole}\n              onChange={(e) => setUpdatedRole(e.target.value)}\n              placeholder=\"Updated role name\"\n              className=\"input-field\"\n            />\n            <button onClick={handleEditRole} className=\"btn btn-primary\">\n              Update Role\n            </button>\n          </div>\n        ) : (\n          <button onClick={() => setIsEditing(true)} className=\"btn btn-primary\">\n            Edit Role\n          </button>\n        )}\n      </div>\n\n      {/* List Roles Section */}\n      <h2 className=\"sub-header\">Existing Roles</h2>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>Role</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {roles.map((role, index) => (\n            <tr key={index}>\n              <td>{role}</td>\n              <td>\n                <button\n                  onClick={() => handleDeleteRole(role)}\n                  className=\"btn btn-danger\"\n                >\n                  Delete\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default RoleManagement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}